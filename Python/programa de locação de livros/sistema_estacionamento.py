##üöó Exerc√≠cio: Sistema de Estacionamento
##Enunciado:

##Crie um programa para gerenciar um estacionamento:

##Crie uma classe Veiculo com os atributos: placa e modelo.

##Crie duas subclasses: Carro e Moto.

##Ambas devem sobrescrever (override) o m√©todo tipo():

##Carro ‚Üí "Carro"

##Moto ‚Üí "Moto"

##Crie a classe Estacionamento, que deve ter m√©todos para:

##Adicionar ve√≠culo.

##Listar ve√≠culos.

##Remover ve√≠culo pela placa.

##No programa principal, fa√ßa um menu com as op√ß√µes:

##1 - Estacionar ve√≠culo

##2 - Listar ve√≠culos

##3 - Retirar ve√≠culo

##4 - Sair

#definimos uma classe chamada "veiculo"  para representar qualquer ve√≠culo generico.
# Exemplo real: pense na "ficha cadastral padr√£o" que a administra√ß√£o do estacionamento usa para qualquer tipo de ve√≠culo.
class Veiculo:
 # O m√©todo especial __init__ √© o "construtor"; ele roda quando criamos um novo Veiculo.
    # Exemplo real: √© como preencher a ficha do ve√≠culo na recep√ß√£o assim que ele entra.
    def __init__(self, placa, modelo):
        # Guardamos a placa recebida no atributo 'placa' do objeto.
        # Exemplo real: anotar a placa "ABC-1234" na ficha.
        self.placa = placa
        # Guardamos o modelo recebido no atributo 'modelo' do objeto.
        # Exemplo real: anotar o modelo "Fiat Uno" na mesma ficha.
        self.modelo = modelo


  # Definimos um m√©todo chamado 'tipo' que descreve que tipo de ve√≠culo √©.
    # Exemplo real: um campo da ficha dizendo "Tipo do ve√≠culo".
    def tipo(self):
        # Retornamos a string "Ve√≠culo" como valor padr√£o (gen√©rico).
        # Exemplo real: se ningu√©m disser o tipo espec√≠fico, fica marcado apenas como "Ve√≠culo".
        return "Ve√≠culo"

# Criamos uma subclasse chamada "Carro" que herda (pega) tudo que existe em Veiculo.
# Exemplo real: √© como ter uma ficha padr√£o, mas com uma etiqueta extra dizendo "Carro".
class Carro(Veiculo):
    # Sobrescrevemos (override) o m√©todo 'tipo' para retornar "Carro".
    # Exemplo real: na ficha do carro, o campo "Tipo do ve√≠culo" fica sempre "Carro".
    def tipo(self):
        # Devolve a palavra "Carro" quando perguntarem o tipo.
        # Exemplo real: o atendente olha a ficha e l√™ "Tipo: Carro".
        return "Carro"


# Criamos outra subclasse chamada "Moto" que tamb√©m herda de Veiculo.
# Exemplo real: outra ficha com etiqueta extra dizendo "Moto".
class Moto(Veiculo):
    # Tamb√©m sobrescrevemos o m√©todo 'tipo', agora para "Moto".
    # Exemplo real: na ficha da moto, o campo "Tipo do ve√≠culo" fica sempre "Moto".
    def tipo(self):
        # Devolve a palavra "Moto" quando perguntarem o tipo.
        # Exemplo real: o atendente confere e l√™ "Tipo: Moto".
        return "Moto"


# Este bloco garante que o c√≥digo abaixo s√≥ rode quando o arquivo for executado diretamente.
# Exemplo real: como uma ordem de servi√ßo que s√≥ √© executada quando voc√™ abre esse formul√°rio espec√≠fico,
# e n√£o quando ele √© apenas anexado por outro setor.
if __name__ == "__main__":
    # Criamos um objeto 'carro1' da classe Carro com placa e modelo.
    # Exemplo real: um carro chega ao estacionamento e a recep√ß√£o cria a ficha dele: placa "ABC-1234", modelo "Fiat Uno".
    carro1 = Carro("ABC-1234", "Fiat Uno")

    # Criamos um objeto 'moto1' da classe Moto com placa e modelo.
    # Exemplo real: uma moto chega e ganha a pr√≥pria ficha: placa "XYZ-5678", modelo "Honda CG".
    moto1 = Moto("XYZ-5678", "Honda CG")

    # Imprimimos as informa√ß√µes do carro, consultando tamb√©m o m√©todo tipo() sobrescrito.
    # Exemplo real: o atendente imprime uma etiqueta para colocar no para-brisa: "ABC-1234 | Fiat Uno | Carro".
    print(f"Placa: {carro1.placa} | Modelo: {carro1.modelo} | Tipo: {carro1.tipo()}")

    # Imprimimos as informa√ß√µes da moto, consultando o m√©todo tipo() da classe Moto.
    # Exemplo real: a etiqueta da moto mostra "XYZ-5678 | Honda CG | Moto".
    print(f"Placa: {moto1.placa} | Modelo: {moto1.modelo} | Tipo: {moto1.tipo()}")

    # Sa√≠da esperada no terminal:
    # Placa: ABC-1234 | Modelo: Fiat Uno | Tipo: Carro
    # Placa: XYZ-5678 | Modelo: Honda CG | Tipo: Moto